{"version":3,"sources":["../node_modules/highlight.js/lib/languages/dts.js","../node_modules/highlight.js/lib/languages/dts.js.js"],"names":["module","exports","hljs","STRINGS","className","variants","inherit","QUOTE_STRING_MODE","begin","end","contains","BACKSLASH_ESCAPE","illegal","NUMBERS","C_NUMBER_RE","relevance","PREPROCESSOR","keywords","keyword","beginKeywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","REFERENCE","name","match","scope","IDENT_RE","emitWarning","warned","console","log","require"],"mappings":"4FAuKAA,EAAOC,QA9JP,SAAaC,GACX,IAAMC,EAAU,CACdC,UAAW,SACXC,SAAU,CACRH,EAAKI,QAAQJ,EAAKK,kBAAmB,CACnCC,MAAO,kBAET,CACEA,MAAO,aACPC,IAAK,IACLC,SAAU,CAACR,EAAKS,mBAElB,CACEH,MAAO,UACPC,IAAK,IACLG,QAAS,OAKTC,EAAU,CACdT,UAAW,SACXC,SAAU,CACR,CACEG,MAAO,kDAET,CACEA,MAAON,EAAKY,cAGhBC,UAAW,GAGPC,EAAe,CACnBZ,UAAW,OACXI,MAAO,IACPC,IAAK,IACLQ,SAAU,CACRC,QAAS,gDAEXR,SAAU,CACR,CACEF,MAAO,OACPO,UAAW,GAEb,CACEI,cAAe,UACfV,IAAK,IACLQ,SAAU,CACRC,QAAS,WAEXR,SAAU,CACRR,EAAKI,QAAQH,EAAS,CACpBC,UAAW,WAEb,CACEA,UAAW,SACXI,MAAO,IACPC,IAAK,IACLG,QAAS,SAIfT,EACAD,EAAKkB,oBACLlB,EAAKmB,uBAIHC,EAAY,CAChBlB,UAAW,WACXI,MAAO,gBA8DT,MAAO,CACLe,KAAM,cACNb,SAAU,CAnCM,CAChBN,UAAW,cACXI,MAAO,eACPO,UAAW,IAkCTO,EA/DY,CACdlB,UAAW,UACXI,MAAO,qBAGK,CACZJ,UAAW,SACXI,MAAO,gCAcI,CACXJ,UAAW,cACXI,MAAO,mCAgBI,CACXO,UAAW,EACXS,MAAO,CACL,gBACA,MACA,KAEFC,MAAO,CACL,EAAG,OACH,EAAG,aAde,CACpBD,MAAO,qBACPT,UAAW,EACXU,MAAO,QA3Ba,CACpBrB,UAAW,SACXW,UAAW,EACXP,MAAO,IACPC,IAAK,IACLC,SAAU,CACRG,EACAS,IAqDApB,EAAKkB,oBACLlB,EAAKmB,qBACLR,EACAV,EACAa,EAtBS,CACXS,MAAO,cACPV,UAAW,EAEXS,MAAO,aAoBL,CACEhB,MAAON,EAAKwB,SAAW,KACvBT,SAAU,Q,qBCjKlB,SAASU,IACAA,EAAYC,SACfD,EAAYC,QAAS,EACrBC,QAAQC,IACN,gKAINH,GACE3B,EAAOC,QAAU8B,EAAQ","file":"static/js/241.e84bba33.chunk.js","sourcesContent":["/*\nLanguage: Device Tree\nDescription: *.dts files used in the Linux kernel\nAuthor: Martin Braun <martin.braun@ettus.com>, Moritz Fischer <moritz.fischer@ettus.com>\nWebsite: https://elinux.org/Device_Tree_Reference\nCategory: config\n*/\n\n/** @type LanguageFn */\nfunction dts(hljs) {\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: '((u8?|U)|L)?\"'\n      }),\n      {\n        begin: '(u8?|U)?R\"',\n        end: '\"',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\\'\\\\\\\\?.',\n        end: '\\'',\n        illegal: '.'\n      }\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)'\n      },\n      {\n        begin: hljs.C_NUMBER_RE\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '#',\n    end: '$',\n    keywords: {\n      keyword: 'if else elif endif define undef ifdef ifndef'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      {\n        beginKeywords: 'include',\n        end: '$',\n        keywords: {\n          keyword: 'include'\n        },\n        contains: [\n          hljs.inherit(STRINGS, {\n            className: 'string'\n          }),\n          {\n            className: 'string',\n            begin: '<',\n            end: '>',\n            illegal: '\\\\n'\n          }\n        ]\n      },\n      STRINGS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const REFERENCE = {\n    className: 'variable',\n    begin: /&[a-z\\d_]*\\b/\n  };\n\n  const KEYWORD = {\n    className: 'keyword',\n    begin: '/[a-z][a-z\\\\d-]*/'\n  };\n\n  const LABEL = {\n    className: 'symbol',\n    begin: '^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:'\n  };\n\n  const CELL_PROPERTY = {\n    className: 'params',\n    relevance: 0,\n    begin: '<',\n    end: '>',\n    contains: [\n      NUMBERS,\n      REFERENCE\n    ]\n  };\n\n  const NODE = {\n    className: 'title.class',\n    begin: /[a-zA-Z_][a-zA-Z\\d_@-]*(?=\\s\\{)/\n  };\n\n  const ROOT_NODE = {\n    className: 'title.class',\n    begin: /^\\/(?=\\s*\\{)/,\n    relevance: 10\n  };\n\n  // TODO: `attribute` might be the right scope here, unsure\n  // I'm not sure if all these key names have semantic meaning or not\n  const ATTR_NO_VALUE = {\n    match: /[a-z][a-z-,]+(?=;)/,\n    relevance: 0,\n    scope: \"attr\"\n  };\n  const ATTR = {\n    relevance: 0,\n    match: [\n      /[a-z][a-z-,]+/,\n      /\\s*/,\n      /=/\n    ],\n    scope: {\n      1: \"attr\",\n      3: \"operator\"\n    }\n  };\n\n  const PUNC = {\n    scope: \"punctuation\",\n    relevance: 0,\n    // `};` combined is just to avoid tons of useless punctuation nodes\n    match: /\\};|[;{}]/\n  };\n\n  return {\n    name: 'Device Tree',\n    contains: [\n      ROOT_NODE,\n      REFERENCE,\n      KEYWORD,\n      LABEL,\n      NODE,\n      ATTR,\n      ATTR_NO_VALUE,\n      CELL_PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS,\n      PREPROCESSOR,\n      PUNC,\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: \"\"\n      }\n    ]\n  };\n}\n\nmodule.exports = dts;\n","function emitWarning() {\n    if (!emitWarning.warned) {\n      emitWarning.warned = true;\n      console.log(\n        'Deprecation (warning): Using file extension in specifier is deprecated, use \"highlight.js/lib/languages/dts\" instead of \"highlight.js/lib/languages/dts.js\"'\n      );\n    }\n  }\n  emitWarning();\n    module.exports = require('./dts.js');"],"sourceRoot":""}